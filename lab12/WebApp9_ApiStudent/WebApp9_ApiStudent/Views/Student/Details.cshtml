@model WebApp9_ApiStudent.Models.Student

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd id="id" class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Index)
        </dt>
        <dd id="index" class="col-sm-10">
            @Html.DisplayFor(model => model.Index)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd id="name" class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<div>
    StudentController:
    @Html.ActionLink("Prev", "Previous", new { id = Model.Id }) |
    @Html.ActionLink("Next", "Next", new { id = Model.Id })
</div>
<div>
    JavaScript(AJAX):
    <button onclick="jsPrev()"> Previous </button> |
    <button onclick="jsNext()"> Next </button>
</div>
<div>
    jQuery(AJAX):
    <button onclick="jQPrev()"> Previous </button> |
    <button onclick="jQNext()"> Next </button>
</div>

@section Scripts{ 
<script>
    function jsAjax(word, suffix) {
        const  xhr = new XMLHttpRequest();
        xhr.onload = function () {
            if (this.status === 200) {
                try {
                    const stud = JSON.parse(this.responseText);
                    //console.log(stud);
                    document.getElementById("id").innerHTML = stud.id;
                    document.getElementById("index").innerHTML = stud.index;
                    document.getElementById("name").innerHTML = stud.name;
                } catch (e) {
                    console.warn('There was an error in JSON. Could not parse.');
                }
            } else if (this.status === 204) { // 204 No Content, so NULL
                window.alert("No "+word+" element");
            } else {
                console.warn("Recived " + this.status+" in response code.");
            }
        };
        let id = document.getElementById("id");
        let str = "/api/student/" + suffix+"/" + id.innerHTML.trim();
        console.log(str);

        xhr.open("get", str);
        xhr.send();
    }

    function jsPrev() {
        jsAjax("previous", "prev");
    }

    function jsNext() {
        jsAjax("next", "next");
    }


    function jQAjax(word, suffix) {
        $.ajax({
            type: "GET",
            url: "/api/student/" + suffix + "/" + $("#id").html().trim(),
            success: function (stud,textStatus, jqXHR) {  // codes 200..299
                if (jqXHR.status === 204) { // 204 No Content, so NULL
                    window.alert("No " + word + " element");
                    return;
                }
                $('#id').html(stud.id);
                $('#index').html(stud.index);
                $('#name').html(stud.name);
            }
            })
            .fail(function (jqXHR, textStatus) { // codes 400..499
                console.warn("Recived " + jqXHR.status + " in response code.");
            });
    }


    function jQPrev(){
        jQAjax("previous", "prev");
    }

    function jQNext() {
        jQAjax("next", "next");
    }

</script>
}
